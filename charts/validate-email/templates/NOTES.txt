1. The application is up and running

2. Input data

The app expects the data in this json format after proper login:

{
  "email":"your-email@gmail.com"
}

3. Expose the service locally:

kubectl --namespace {{ .Release.Namespace }} port-forward service/{{ include "validate-email.fullname" . }} 8080:{{ .Values.service.port }}

4. Test the application
On another terminal:

Get the JWT secret key and the username password the helm chart created for you:

VALIDATE_JWT_SECRET_KEY=$(kubectl -n {{ .Release.Namespace }} get secret {{ .Release.Name }}-validate-email -o jsonpath="{.data.validate_jwt_key}" | base64 -d)
VALIDATE_API_USER=$(kubectl -n {{ .Release.Namespace }} get secret {{ .Release.Name }}-validate-email -o jsonpath="{.data.validate_api_user}" | base64 -d)
VALIDATE_API_PASSWORD=$(kubectl -n {{ .Release.Namespace }} get secret {{ .Release.Name }}-validate-email -o jsonpath="{.data.validate_api_password}" | base64 -d)


Define the host where the app is running, and its endpoints. We exposed in this example with port-forward:

VALIDATE_HOSTNAME="http://127.0.0.1"
VALIDATE_LOGIN_URL="$VALIDATE_HOSTNAME:8080/login"
VALIDATE_API_URL="$VALIDATE_HOSTNAME:8080/validate_email"


Get the token to use the app:

VALIDATE_TOKEN=$(curl -X POST "$VALIDATE_LOGIN_URL" -H "Content-Type: application/json" -d '{"username": "'"${VALIDATE_API_USER}"'", "password": "'"${VALIDATE_API_PASSWORD}"'"}' -s | jq .access_token -r)


Finally run the validation:
curl -s "$VALIDATE_API_URL" -X POST -d '{"email":"besmirtv@gmail.com"}' -H 'Content-type: Application/json' -H "Authorization: Bearer $VALIDATE_TOKEN" 


5 Uninstall


helm uninstall {{ .Release.Name }} --namespace -n {{ .Release.Namespace }}
=========================================================